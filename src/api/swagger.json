{
    "swagger": "2.0",
    "info": {
        "title": "Canecas Service",
        "description": "Canecas API documentation",
        "version": "1.0"
    },
    "host": "localhost:3500",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "tags": [
        {
            "name": "Products",
            "description": "API for Products in the system"
        },
        {
            "name": "ProductTypes",
            "description": "API for Product Types in the system"
        },
        {
            "name": "Users",
            "description": "API for Users in the system"
        },
        {
            "name": "Orders",
            "description": "API for Orders Types in the system"
        }
    ],
    "definitions": {
        "id": {
            "type": "string"
        },
        "Error": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "number"
                },
                "description": {
                    "type": "number"
                }
            }
        },
        "JwtError": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "error": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "Timestamp"
                },
                "updatedAt": {
                    "type": "Timestamp"
                }
            }
        },
        "ProductType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "Timestamp"
                },
                "updatedAt": {
                    "type": "Timestamp"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "Timestamp"
                },
                "updatedAt": {
                    "type": "Timestamp"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "orderDate": {
                    "type": "Date"
                },
                "userEmail": {
                    "type": "string"
                },
                "status": {
                    "type": "number"
                },
                "totalPrice": {
                    "type": "number"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItem"
                    }
                },
                "statusHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StatusHistory"
                    }
                },
                "createdAt": {
                    "type": "Timestamp"
                },
                "updatedAt": {
                    "type": "Timestamp"
                }
            }
        },
        "OrderItem": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                }
            }
        },
        "StatusHistory": {
            "type": "object",
            "properties": {
                "changeDate": {
                    "type": "Date"
                },
                "prevStatus": {
                    "type": "number"
                },
                "currStatus": {
                    "type": "number"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "OrderUpdateRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "number",
                    "required": false
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderItem"
                    },
                    "required": false
                }
            }
        },
        "Products": {
            "description": "Array of ...",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Product"
            }
        },
        "ProductTypes": {
            "description": "Array of ...",
            "type": "array",
            "items": {
                "$ref": "#/definitions/ProductType"
            }
        },
        "Users": {
            "description": "Array of ...",
            "type": "array",
            "items": {
                "$ref": "#/definitions/User"
            }
        },
        "Orders": {
            "description": "Array of ...",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Order"
            }
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List all products",
                "description": "List all products",
                "operationId": "list-products",
                "responses": {
                    "200": {
                        "description": "List all products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new Product in system",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/products/type/{type}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "retrieve a list of products by type",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "description": "Name of the Type that we want to match",
                        "type": "string"
                    }
                ],
                "description": "List all products with Type",
                "operationId": "list-product-type",
                "responses": {
                    "200": {
                        "description": "List all products with specified Type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "404": {
                        "description": "Type doesn't exists",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/name/{name}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "retrieve a product by name",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "description": "Name of the Product that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single product by its name",
                "operationId": "get-product-name",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "retrieve a product by ID",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Product that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single product",
                "operationId": "get-product",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update product with given ID",
                "tags": [
                    "Products"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Product that we want to match",
                        "type": "string"
                    },
                    {
                        "name": "product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete product with given ID",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Product that we want to match",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted"
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/productTypes": {
            "get": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "list all product types",
                "description": "List all productTypes",
                "operationId": "list-productTypes",
                "responses": {
                    "200": {
                        "description": "List all productTypes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductType"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "Create a new ProductType in system",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productType",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ProductType created",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/productTypes/description/{description}": {
            "get": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "retrieve a ProductType by its description",
                "parameters": [
                    {
                        "name": "description",
                        "in": "path",
                        "required": true,
                        "description": "Description of the ProductType that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single productType by its description",
                "operationId": "get-productType-description",
                "responses": {
                    "200": {
                        "description": "ProductType found",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    },
                    "404": {
                        "description": "ProductType not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/productTypes/{productTypeId}": {
            "get": {
                "tags": [
                    "ProductTypes"
                ],
                "summary": "retrieve a ProductType by its ID",
                "parameters": [
                    {
                        "name": "productTypeId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the ProductType that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single productType",
                "operationId": "get-productType",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    },
                    "404": {
                        "description": "ProductType not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update productType with given ID",
                "tags": [
                    "ProductTypes"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productTypeId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the ProductType that we want to match",
                        "type": "string"
                    },
                    {
                        "name": "productType",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductType"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "ProductType not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete productType with given ID",
                "tags": [
                    "ProductTypes"
                ],
                "parameters": [
                    {
                        "name": "productTypeId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the ProductType that we want to match",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ProductType deleted"
                    },
                    "404": {
                        "description": "ProductType not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all users",
                "description": "List all users",
                "operationId": "list-users",
                "responses": {
                    "200": {
                        "description": "List all users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new User in system",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/users/role/{role}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all Users by Role",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "description": "Role of the users that we want to match",
                        "type": "string"
                    }
                ],
                "description": "List all users with Type",
                "operationId": "list-user-type",
                "responses": {
                    "200": {
                        "description": "List all users with specified Type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "404": {
                        "description": "Type doesn't exists",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/email/{email}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "retrieve a User by its email",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "description": "Email of the User that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single user by its email",
                "operationId": "get-user-role",
                "responses": {
                    "200": {
                        "description": "User found",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "retrieve a User by its ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the User that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single user",
                "operationId": "get-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user with given ID",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the User that we want to match",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the User that we want to match",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "List all orders",
                "description": "List all orders",
                "operationId": "list-orders",
                "responses": {
                    "200": {
                        "description": "List all orders",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new Order in system",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/orders/from/{startDate}/to/{endDate}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "List all Orders by Date range",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "path",
                        "required": true,
                        "description": "Starting OrderDate in format yyyy-MM-dd",
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "path",
                        "required": true,
                        "description": "Ending OrderDate in format yyyy-MM-dd",
                        "type": "string"
                    }
                ],
                "description": "List all orders with OrderDate between start and end dates",
                "operationId": "list-order-type",
                "responses": {
                    "200": {
                        "description": "List all orders with specified date range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Date range is not valid (dates incorrect)",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/orders/{orderId}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "retrieve a Order by its ID",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Order that we want to match",
                        "type": "string"
                    }
                ],
                "description": "retrives a single order",
                "operationId": "get-order",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update order with given ID",
                "tags": [
                    "Orders"
                ],
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Order that we want to match",
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrderUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete order with given ID",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the Order that we want to match",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order deleted"
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }
}